# SPDX-FileCopyrightText: 2022 The HedgeDoc developers (see AUTHORS file)
#
# SPDX-License-Identifier: AGPL-3.0-only

name: Backend / E2E Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.job }}
  cancel-in-progress: true

env:
  NODEJS_VERSION: 18

defaults:
  run:
    working-directory: backend

jobs:
  changes:
    name: Check for backend changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changed: ${{ github.event_name == 'push' || steps.changed.outputs.files }}
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        if: github.event_name != 'push'

      - name: Check for backend file changes
        if: github.event_name != 'push'
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changed
        with:
          filters: |
            files:
              - 'commons/**'
              - 'backend/**'
              - '.github/**'
              - '.yarn/**'

  sqlite: # This run also collects coverage
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        if: needs.changes.outputs.changed == 'true'
        with:
          fetch-depth: 0

      - name: Setup node
        if: needs.changes.outputs.changed == 'true'
        uses: ./.github/actions/setup-node
        with:
          NODE_VERSION: ${{ env.NODEJS_VERSION }}

      - run: yarn run test:e2e:cov
        if: needs.changes.outputs.changed == 'true'

      - uses: codecov/codecov-action@v3
        if: needs.changes.outputs.changed == 'true'
        with:
          directory: backend/coverage-e2e
          flags: e2e-tests

  mariadb:
    needs: changes
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb
        env:
          MYSQL_USER: hedgedoc
          MYSQL_PASSWORD: hedgedoc
          MYSQL_DATABASE: hedgedoc
          MYSQL_ROOT_PASSWORD: hedgedoc
        options: --health-cmd "mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        if: needs.changes.outputs.changed == 'true'
        with:
          fetch-depth: 0

      - name: Setup node
        if: needs.changes.outputs.changed == 'true'
        uses: ./.github/actions/setup-node
        with:
          NODE_VERSION: ${{ env.NODEJS_VERSION }}

      - run: yarn run test:e2e
        if: needs.changes.outputs.changed == 'true'
        env:
          HEDGEDOC_TEST_DB_TYPE: mariadb

  postgres:
    needs: changes
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: hedgedoc
          POSTGRES_USER: hedgedoc
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        if: needs.changes.outputs.changed == 'true'
        with:
          fetch-depth: 0

      - name: Setup node
        if: needs.changes.outputs.changed == 'true'
        uses: ./.github/actions/setup-node
        with:
          NODE_VERSION: ${{ env.NODEJS_VERSION }}

      - run: yarn run test:e2e
        if: needs.changes.outputs.changed == 'true'
        env:
          HEDGEDOC_TEST_DB_TYPE: postgres
